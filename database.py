# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'database.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import csv
from itertools import zip_longest
import pandas
import io
import MySQLdb as mdb
from contextlib import closing

from add_to_database import Ui_AddToDatabaseWindow
from edit_database_item import Ui_EditDatabaseItemWindow


dbFileDir = ""
categories = []
types = []
attributes = []
facts = []
perceptions = []
actions = []

class Ui_DatabaseWindow(object):
    def setupUi(self, DatabaseWindow):
        DatabaseWindow.setObjectName("DatabaseWindow")
        DatabaseWindow.resize(1159, 861)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(DatabaseWindow.sizePolicy().hasHeightForWidth())
        DatabaseWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(DatabaseWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.browseBtn = QtWidgets.QPushButton(self.centralwidget)
        self.browseBtn.setGeometry(QtCore.QRect(660, 10, 191, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.browseBtn.setFont(font)
        self.browseBtn.setObjectName("browseBtn")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 10, 591, 51))
        self.label.setObjectName("label")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(0, 70, 1161, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(120, 80, 211, 51))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(490, 80, 151, 51))
        self.label_3.setObjectName("label_3")
        self.CatListWidget = QtWidgets.QListWidget(self.centralwidget)
        self.CatListWidget.setGeometry(QtCore.QRect(30, 130, 341, 261))
        self.CatListWidget.setObjectName("CatListWidget")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.CatListWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.CatListWidget.addItem(item)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(840, 80, 271, 51))
        self.label_5.setObjectName("label_5")
        self.addBtn = QtWidgets.QPushButton(self.centralwidget)
        self.addBtn.setGeometry(QtCore.QRect(570, 750, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.addBtn.setFont(font)
        self.addBtn.setObjectName("addBtn")
        self.editBtn = QtWidgets.QPushButton(self.centralwidget)
        self.editBtn.setGeometry(QtCore.QRect(760, 750, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.editBtn.setFont(font)
        self.editBtn.setObjectName("editBtn")
        self.downloadBtn = QtWidgets.QPushButton(self.centralwidget)
        self.downloadBtn.setGeometry(QtCore.QRect(900, 10, 191, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.downloadBtn.setFont(font)
        self.downloadBtn.setObjectName("downloadBtn")
        self.TypesListWidget = QtWidgets.QListWidget(self.centralwidget)
        self.TypesListWidget.setGeometry(QtCore.QRect(400, 130, 341, 261))
        self.TypesListWidget.setObjectName("TypesListWidget")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.TypesListWidget.addItem(item)
        self.AttrListWidget = QtWidgets.QListWidget(self.centralwidget)
        self.AttrListWidget.setGeometry(QtCore.QRect(770, 130, 341, 261))
        self.AttrListWidget.setObjectName("AttrListWidget")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.AttrListWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.AttrListWidget.addItem(item)
        self.deleteBtn = QtWidgets.QPushButton(self.centralwidget)
        self.deleteBtn.setGeometry(QtCore.QRect(950, 750, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.deleteBtn.setFont(font)
        self.deleteBtn.setObjectName("deleteBtn")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(140, 400, 211, 51))
        self.label_4.setObjectName("label_4")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(480, 400, 211, 51))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(860, 400, 211, 51))
        self.label_7.setObjectName("label_7")
        self.FactsListWidget = QtWidgets.QListWidget(self.centralwidget)
        self.FactsListWidget.setGeometry(QtCore.QRect(30, 460, 341, 261))
        self.FactsListWidget.setObjectName("FactsListWidget")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.FactsListWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.FactsListWidget.addItem(item)
        self.PercListWidget = QtWidgets.QListWidget(self.centralwidget)
        self.PercListWidget.setGeometry(QtCore.QRect(400, 460, 341, 261))
        self.PercListWidget.setObjectName("PercListWidget")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.PercListWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.PercListWidget.addItem(item)
        self.ActListWidget = QtWidgets.QListWidget(self.centralwidget)
        self.ActListWidget.setGeometry(QtCore.QRect(770, 460, 341, 261))
        self.ActListWidget.setObjectName("ActListWidget")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.ActListWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(14)
        item.setFont(font)
        self.ActListWidget.addItem(item)
        self.CatListWidget.raise_()
        self.browseBtn.raise_()
        self.label.raise_()
        self.line.raise_()
        self.label_2.raise_()
        self.label_3.raise_()
        self.label_5.raise_()
        self.addBtn.raise_()
        self.editBtn.raise_()
        self.downloadBtn.raise_()
        self.TypesListWidget.raise_()
        self.AttrListWidget.raise_()
        self.deleteBtn.raise_()
        self.label_4.raise_()
        self.label_6.raise_()
        self.label_7.raise_()
        self.FactsListWidget.raise_()
        self.PercListWidget.raise_()
        self.ActListWidget.raise_()
        DatabaseWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(DatabaseWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1159, 22))
        self.menubar.setObjectName("menubar")
        self.menuInteractive_System_Modelling = QtWidgets.QMenu(self.menubar)
        self.menuInteractive_System_Modelling.setObjectName("menuInteractive_System_Modelling")
        DatabaseWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(DatabaseWindow)
        self.statusbar.setObjectName("statusbar")
        DatabaseWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuInteractive_System_Modelling.menuAction())

        self.retranslateUi(DatabaseWindow)
        QtCore.QMetaObject.connectSlotsByName(DatabaseWindow)

        self.version_id = QtWidgets.QLabel(self.centralwidget)
        self.version_id.setGeometry(QtCore.QRect(0, 0, 0, 0))
        self.version_id.setObjectName("version_id")

        self.browseBtn.clicked.connect(self.getFile)
        self.downloadBtn.clicked.connect(self.saveFile)
        self.addBtn.clicked.connect(self.addItem)
        self.addBtn.clicked.connect(DatabaseWindow.close)
        self.editBtn.clicked.connect(self.editItem)


    def editItem(self):
        self.EditDatabaseItemWindow = QtWidgets.QMainWindow()
        self.ui = Ui_EditDatabaseItemWindow()
        self.ui.setupUi(self.EditDatabaseItemWindow)
        self.EditDatabaseItemWindow.show()

    def addItem(self):
        self.AddToDatabaseWindow = QtWidgets.QMainWindow()
        self.ui = Ui_AddToDatabaseWindow()
        self.ui.setupUi(self.AddToDatabaseWindow)
        self.AddToDatabaseWindow.show()

    def getFile(self):
        db = mdb.connect('127.0.0.1', 'root', '', 'interSys')
        dbFileDir, _ = QtWidgets.QFileDialog.getOpenFileName(self.centralwidget, "Open File", QtCore.QDir.currentPath() , '*.csv')
        df = pandas.read_csv(dbFileDir)
        # print(dbFileDir)
        # print(df)
        version_id = int(self.version_id.text())

        with db:
            cur = db.cursor()

            cur.execute("DELETE FROM categories WHERE version_id = '%i'" % (version_id))
            cur.execute("DELETE FROM types WHERE version_id = '%i'" % (version_id))
            cur.execute("DELETE FROM attributes WHERE version_id = '%i'" % (version_id))
            cur.execute("DELETE FROM facts WHERE version_id = '%i'" % (version_id))
            cur.execute("DELETE FROM perceptions WHERE version_id = '%i'" % (version_id))
            cur.execute("DELETE FROM actions WHERE version_id = '%i'" % (version_id))

            for i, item in df.Categories.dropna().iteritems():
                categories.append(item)
                cur.execute("INSERT INTO categories(version_id, value)"
                        "VALUES('%i', '%s')" % (version_id,
                                                  ''.join(item)))
            for i, item in df.Types.dropna().iteritems():
                types.append(item)
                cur.execute("INSERT INTO types(version_id, value)"
                        "VALUES('%i', '%s')" % (version_id,
                                                  ''.join(item)))
            for i, item in df.Attributes.dropna().iteritems():
                attributes.append(item)
                cur.execute("INSERT INTO attributes(version_id, value)"
                        "VALUES('%i', '%s')" % (version_id,
                                                  ''.join(item)))
            for i, item in df.Facts.dropna().iteritems():
                facts.append(item)
                cur.execute("INSERT INTO facts(version_id, value)"
                        "VALUES('%i', '%s')" % (version_id,
                                                  ''.join(item)))
            for i, item in df.Perceptions.dropna().iteritems():
                perceptions.append(item)
                cur.execute("INSERT INTO perceptions(version_id, value)"
                        "VALUES('%i', '%s')" % (version_id,
                                                  ''.join(item)))
            for i, item in df.Actions.dropna().iteritems():
                actions.append(item)
                cur.execute("INSERT INTO actions(version_id, value)"
                        "VALUES('%i', '%s')" % (version_id,
                                                  ''.join(item)))

 
            db.commit()
            QtWidgets.QMessageBox.about(self.centralwidget,'Connection', 'Data Inserted Successfully')
        #open the project
        # print(categories)
        # print(types)
        # print(attributes)
        # print(facts)
        # print(perceptions)
        # print(actions)
        self.getItems()

    def getItems(self):
        print (int(self.version_id.text()))
        self.CatListWidget.clear()
        self.TypesListWidget.clear()
        self.AttrListWidget.clear()
        self.FactsListWidget.clear()
        self.PercListWidget.clear()
        self.ActListWidget.clear()
        version_id = int(self.version_id.text())
        db = mdb.connect('127.0.0.1', 'root', '', 'interSys')
        with closing(db.cursor()) as cur:

            cur.execute("SELECT * FROM categories WHERE version_id = '%i'" % (version_id))
            categories = cur.fetchall()
            for x in categories:
                item = QtWidgets.QListWidgetItem()
                item.setText(x[2])
                font = QtGui.QFont()
                font.setPointSize(14)
                item.setFont(font)
                self.CatListWidget.addItem(item)

            cur.execute("SELECT * FROM types WHERE version_id = '%i'" % (version_id))
            types = cur.fetchall()
            for x in types:
                item = QtWidgets.QListWidgetItem()
                item.setText(x[2])
                font = QtGui.QFont()
                font.setPointSize(14)
                item.setFont(font)
                self.TypesListWidget.addItem(item)

            cur.execute("SELECT * FROM attributes WHERE version_id = '%i'" % (version_id))
            attributes = cur.fetchall()
            for x in attributes:
                item = QtWidgets.QListWidgetItem()
                item.setText(x[2])
                font = QtGui.QFont()
                font.setPointSize(14)
                item.setFont(font)
                self.AttrListWidget.addItem(item)

            cur.execute("SELECT * FROM facts WHERE version_id = '%i'" % (version_id))
            facts = cur.fetchall()
            for x in facts:
                item = QtWidgets.QListWidgetItem()
                item.setText(x[2])
                font = QtGui.QFont()
                font.setPointSize(14)
                item.setFont(font)
                self.FactsListWidget.addItem(item)

            cur.execute("SELECT * FROM perceptions WHERE version_id = '%i'" % (version_id))
            perceptions = cur.fetchall()
            for x in perceptions:
                item = QtWidgets.QListWidgetItem()
                item.setText(x[2])
                font = QtGui.QFont()
                font.setPointSize(14)
                item.setFont(font)
                self.PercListWidget.addItem(item)

            cur.execute("SELECT * FROM actions WHERE version_id = '%i'" % (version_id))
            actions = cur.fetchall()
            for x in actions:
                item = QtWidgets.QListWidgetItem()
                item.setText(x[2])
                font = QtGui.QFont()
                font.setPointSize(14)
                item.setFont(font)
                self.ActListWidget.addItem(item)


        db.close() 

    def saveFile(self):
        print (dbFileDir)
        if dbFileDir == "":
            fileDir, _ = QtWidgets.QFileDialog.getSaveFileName(self.centralwidget, "Save File", QtCore.QDir.currentPath() , '*.csv')
            print(fileDir)
            db = [categories, types, attributes, facts, perceptions, actions]
            export_data = zip_longest(*db, fillvalue = '')
            with open('{}.csv'.format(fileDir), 'w+') as dbFile:
                wr = csv.writer(dbFile)
                wr.writerow(("Categories", "Types", "Attributes", "Facts", "Perceptions", "Actions"))
                wr.writerows(export_data)

    def retranslateUi(self, DatabaseWindow):
        _translate = QtCore.QCoreApplication.translate
        DatabaseWindow.setWindowTitle(_translate("DatabaseWindow", "MainWindow"))
        self.browseBtn.setText(_translate("DatabaseWindow", "Browse"))
        self.label.setText(_translate("DatabaseWindow", "<html><head/><body><p><span style=\" font-size:28pt;\">Database</span></p></body></html>"))
        self.label_2.setText(_translate("DatabaseWindow", "<html><head/><body><p><span style=\" font-size:20pt;\">Categories</span></p></body></html>"))
        self.label_3.setText(_translate("DatabaseWindow", "<html><head/><body><p><span style=\" font-size:20pt;\">Types</span></p></body></html>"))
        __sortingEnabled = self.CatListWidget.isSortingEnabled()
        self.CatListWidget.setSortingEnabled(False)
        self.CatListWidget.setSortingEnabled(__sortingEnabled)
        self.label_5.setText(_translate("DatabaseWindow", "<html><head/><body><p><span style=\" font-size:20pt;\">Attributes</span></p></body></html>"))
        self.addBtn.setText(_translate("DatabaseWindow", "Add"))
        self.editBtn.setText(_translate("DatabaseWindow", "Edit"))
        self.downloadBtn.setText(_translate("DatabaseWindow", "Download"))
        __sortingEnabled = self.TypesListWidget.isSortingEnabled()
        self.TypesListWidget.setSortingEnabled(False)
        self.TypesListWidget.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.AttrListWidget.isSortingEnabled()
        self.AttrListWidget.setSortingEnabled(False)
        self.AttrListWidget.setSortingEnabled(__sortingEnabled)
        self.deleteBtn.setText(_translate("DatabaseWindow", "Delete"))
        self.label_4.setText(_translate("DatabaseWindow", "<html><head/><body><p><span style=\" font-size:20pt;\">Facts</span></p></body></html>"))
        self.label_6.setText(_translate("DatabaseWindow", "<html><head/><body><p><span style=\" font-size:20pt;\">Perceptions</span></p></body></html>"))
        self.label_7.setText(_translate("DatabaseWindow", "<html><head/><body><p><span style=\" font-size:20pt;\">Actions</span></p></body></html>"))
        __sortingEnabled = self.FactsListWidget.isSortingEnabled()
        self.FactsListWidget.setSortingEnabled(False)
        self.FactsListWidget.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.PercListWidget.isSortingEnabled()
        self.PercListWidget.setSortingEnabled(False)
        self.PercListWidget.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.ActListWidget.isSortingEnabled()
        self.ActListWidget.setSortingEnabled(False)
        item = self.ActListWidget.item(0)
        self.ActListWidget.setSortingEnabled(__sortingEnabled)
        self.menuInteractive_System_Modelling.setTitle(_translate("DatabaseWindow", "1"))
