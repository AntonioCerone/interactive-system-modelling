# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'add_to_sem_mem.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import MySQLdb as mdb
from contextlib import closing
add_fact = False

class Ui_AddToShortTermMemWindow(object):
    def setupUi(self, AddToShortTermMemWindow):
        AddToShortTermMemWindow.setObjectName("AddToShortTermMemWindow")
        AddToShortTermMemWindow.resize(513, 500)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(AddToShortTermMemWindow.sizePolicy().hasHeightForWidth())
        AddToShortTermMemWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(AddToShortTermMemWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 10, 591, 51))
        self.label.setObjectName("label")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(0, 70, 1161, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.saveBtn = QtWidgets.QPushButton(self.centralwidget)
        self.saveBtn.setGeometry(QtCore.QRect(140, 380, 241, 25))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.saveBtn.setFont(font)
        self.saveBtn.setObjectName("saveBtn")
        self.DomComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.DomComboBox.setGeometry(QtCore.QRect(180, 210, 311, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.DomComboBox.setFont(font)
        self.DomComboBox.setObjectName("DomComboBox")
        self.FactsComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.FactsComboBox.setGeometry(QtCore.QRect(180, 260, 311, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.FactsComboBox.setFont(font)
        self.FactsComboBox.setObjectName("FactsComboBox")
        self.QuestComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.QuestComboBox.setGeometry(QtCore.QRect(180, 260, 311, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.QuestComboBox.setFont(font)
        self.QuestComboBox.setObjectName("QuestComboBox")
        self.factBtn = QtWidgets.QRadioButton(self.centralwidget)
        self.factBtn.setGeometry(QtCore.QRect(30, 110, 331, 23))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.factBtn.setFont(font)
        self.factBtn.setObjectName("factBtn")
        self.buttonGroup = QtWidgets.QButtonGroup(AddToShortTermMemWindow)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.factBtn)
        self.questBtn = QtWidgets.QRadioButton(self.centralwidget)
        self.questBtn.setGeometry(QtCore.QRect(30, 140, 331, 23))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.questBtn.setFont(font)
        self.questBtn.setObjectName("questBtn")
        self.buttonGroup.addButton(self.questBtn)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(180, 310, 311, 41))
        self.lineEdit.setObjectName("lineEdit")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(20, 310, 201, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 210, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(20, 260, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(20, 260, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.startBtn = QtWidgets.QPushButton(self.centralwidget)
        self.startBtn.setGeometry(QtCore.QRect(390, 110, 101, 25))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.startBtn.setFont(font)
        self.startBtn.setObjectName("startBtn")
        AddToShortTermMemWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(AddToShortTermMemWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 513, 22))
        self.menubar.setObjectName("menubar")
        self.menuInteractive_System_Modelling = QtWidgets.QMenu(self.menubar)
        self.menuInteractive_System_Modelling.setObjectName("menuInteractive_System_Modelling")
        AddToShortTermMemWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(AddToShortTermMemWindow)
        self.statusbar.setObjectName("statusbar")
        AddToShortTermMemWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuInteractive_System_Modelling.menuAction())

        self.retranslateUi(AddToShortTermMemWindow)
        QtCore.QMetaObject.connectSlotsByName(AddToShortTermMemWindow)

        self.lineEdit.hide()
        self.FactsComboBox.hide()
        self.QuestComboBox.hide()
        self.DomComboBox.hide()

        self.label_8.hide()
        self.label_9.hide()
        self.label_10.hide()
        self.label_4.hide()

        self.version_id = QtWidgets.QLabel(self.centralwidget)
        self.version_id.setGeometry(QtCore.QRect(0, 0, 0, 0))
        self.version_id.setObjectName("version_id")

        self.startBtn.clicked.connect(self.startNow)
        self.saveBtn.clicked.connect(self.saveItem)
        self.saveBtn.clicked.connect(AddToShortTermMemWindow.close)

    def startNow(self):
        version_id = int(self.version_id.text())
        db = mdb.connect('127.0.0.1', 'root', '', 'interSys')
        with closing(db.cursor()) as cur:
            cur.execute("SELECT * FROM domains WHERE version_id = '%i'" % (version_id))
            domains = cur.fetchall()
            for x in domains:
                self.DomComboBox.addItem(x[2])
        self.factBtn.clicked.connect(self.addFact)
        self.questBtn.clicked.connect(self.addQuestion)

    def addFact(self):
        self.QuestComboBox.hide()
        self.DomComboBox.show()
        self.lineEdit.show()
        self.FactsComboBox.show()        
        self.label_10.hide()
        self.label_9.show()
        self.label_4.show()
        self.label_8.show()
        self.FactsComboBox.clear()
        self.QuestComboBox.clear()
        global add_fact
        add_fact = True
        version_id = int(self.version_id.text())
        db = mdb.connect('127.0.0.1', 'root', '', 'interSys')
        with closing(db.cursor()) as cur:
            cur.execute("SELECT * FROM facts WHERE version_id = '%i'" % (version_id))
            facts = cur.fetchall()
            for x in facts:
                self.FactsComboBox.addItem(x[2])

    def addQuestion(self):
        self.FactsComboBox.hide()
        self.DomComboBox.show()
        self.lineEdit.show()
        self.QuestComboBox.show()
        self.label_9.hide()
        self.label_10.show()
        self.label_4.show()
        self.label_8.show()
        self.FactsComboBox.clear()
        self.QuestComboBox.clear()
        version_id = int(self.version_id.text())
        db = mdb.connect('127.0.0.1', 'root', '', 'interSys')
        with closing(db.cursor()) as cur:
            cur.execute("SELECT * FROM questions WHERE version_id = '%i'" % (version_id))
            questions = cur.fetchall()
            for x in questions:
                self.QuestComboBox.addItem(x[2])

    def saveItem(self):
        db = mdb.connect('127.0.0.1', 'root', '', 'interSys')
        version_id = int(self.version_id.text())
        with closing(db.cursor()) as cur:
            cur_dom = str(self.DomComboBox.currentText())
            cur_decay = int(str(self.lineEdit.text()))
            global add_fact
            if(add_fact):
                add_fact = False
                cur_fact = str(self.FactsComboBox.currentText())
                cur.execute("SELECT * FROM facts WHERE version_id = '%i' AND value = '%s'" % (version_id, cur_fact))
                facts = cur.fetchall()
                for fact in facts:
                    fact_cat = fact[3]
                    fact_type = fact[4]
                    fact_attr = fact[5]
                cur.execute("INSERT INTO short_term_mem(version_id, domain, item, value, decay, categories, types, attributes)"
                        "VALUES('%i', '%s', 'fact', '%s', '%i', '%s', '%s', '%s')" % (version_id, cur_dom, cur_fact, cur_decay, fact_cat, fact_type, fact_attr))
            else:
                cur_quest = str(self.QuestComboBox.currentText())
                cur.execute("SELECT * FROM questions WHERE version_id = '%i' AND value = '%s'" % (version_id, cur_quest))
                questions = cur.fetchall()
                for quest in questions:
                    quest_cat = quest[3]
                    quest_type = quest[4]
                    quest_attr = quest[5]
                cur.execute("INSERT INTO short_term_mem(version_id, domain, item, value, decay, categories, types, attributes)"
                        "VALUES('%i', '%s', 'question', '%s', '%i', '%s', '%s', '%s')" % (version_id, cur_dom, cur_quest, cur_decay, quest_cat, quest_type, quest_attr))
            

            db.commit()
            QtWidgets.QMessageBox.about(self.centralwidget,'Connection', 'Data Inserted Successfully')



    def retranslateUi(self, AddToShortTermMemWindow):
        _translate = QtCore.QCoreApplication.translate
        AddToShortTermMemWindow.setWindowTitle(_translate("AddToShortTermMemWindow", "MainWindow"))
        self.label.setText(_translate("AddToShortTermMemWindow", "<html><head/><body><p><span style=\" font-size:28pt;\">Add Item Representation</span></p></body></html>"))
        self.saveBtn.setText(_translate("AddToShortTermMemWindow", "Save"))
        self.DomComboBox.setItemText(0, _translate("AddToShortTermMemWindow", "Animals"))
        self.DomComboBox.setItemText(1, _translate("AddToShortTermMemWindow", "Dogs"))
        self.FactsComboBox.setItemText(0, _translate("AddToShortTermMemWindow", "Animal can breath"))
        self.FactsComboBox.setItemText(1, _translate("AddToShortTermMemWindow", "Animal can move"))
        self.factBtn.setText(_translate("AddToShortTermMemWindow", "Add fact"))
        self.questBtn.setText(_translate("AddToShortTermMemWindow", "Add question"))
        self.label_4.setText(_translate("AddToShortTermMemWindow", "Domain"))
        self.label_8.setText(_translate("AddToShortTermMemWindow", "Decay time"))
        self.label_9.setText(_translate("AddToShortTermMemWindow", "Fact"))
        self.label_10.setText(_translate("AddToShortTermMemWindow", "Question"))

        self.startBtn.setText(_translate("EditDatabaseItemWindow", "Start"))
        self.menuInteractive_System_Modelling.setTitle(_translate("AddToShortTermMemWindow", "1"))

